<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper   PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.roommake.community.mapper.CommunityMapper">

    <select id="getAllCommCategories" resultType="com.roommake.community.vo.CommunityCategory">
        select
            comm_category_id    as id,
            comm_category_name  as name
        from
            community_category
        order by
            comm_category_id asc
    </select>

    <select id="getAllCommunitiesByCatId" parameterType="int" resultType="com.roommake.community.vo.Community">
        select
            comm_id                 as id,
            comm_category_id        as "category.id",
            user_id                 as "user.id",
            comm_title              as title,
            comm_content            as content,
            comm_view_count         as viewCount,
            comm_create_date        as createDate,
            comm_update_date        as updateDate,
            comm_delete_date        as deleteDate,
            comm_status             as status,
            comm_delete_yn          as deleteYn,
            comm_like_count         as likeCount,
            comm_scrap_count        as scrapCount,
            comm_complaint_count    as complaintCount,
            comm_image_name         as imageName
        from
            community
        where
            comm_category_id = #{categoryId};
    </select>

    <select id="getCommunityByCommId" parameterType="int" resultType="com.roommake.community.vo.Community">
        select
            comm_id                 as id,
            comm_category_id        as "category.id",
            user_id                 as "user.id",
            comm_title              as title,
            comm_content            as content,
            comm_view_count         as viewCount,
            comm_create_date        as createDate,
            comm_update_date        as updateDate,
            comm_delete_date        as deleteDate,
            comm_status             as status,
            comm_delete_yn          as deleteYn,
            comm_like_count         as likeCount,
            comm_scrap_count        as scrapCount,
            comm_complaint_count    as complaintCount,
            comm_image_name         as imageName
        from
            community
        where
            comm_id = #{commId};
    </select>

    <insert id="createCommunity" parameterType="com.roommake.community.vo.Community">
        insert into community
            (comm_category_id, user_id, comm_title, comm_content, comm_image_name)
        values
            (#{category.id}, #{user.id}, #{title}, #{content}, #{imageName})
    </insert>

    <!-- 사용자 ID로 게시글 정보 조회 -->
    <select id="getCommunitiesByUserId" parameterType="int" resultType="com.roommake.community.dto.MyPageCommunity">
        SELECT
            c.comm_id          AS id,
            c.comm_title       AS title,
            c.comm_content     AS content,
            c.comm_view_count  AS viewCount,
            c.comm_image_name  AS imageName,
            c.comm_create_date AS createDate,
             u.user_nickname   AS "user.nickname"
        FROM
            community c
        left join
            user u ON c.user_id = u.user_id
        WHERE
            c.user_id = #{userId}
        ORDER BY
            c.comm_create_date DESC
    </select>

    <!-- 사용자 ID로 사용자가 작성한 총 게시물 수 조회 -->
    <select id="countCommunitiesByUserId" resultType="int">
        SELECT
            COUNT(*)
        FROM
            community
        WHERE
            user_id = #{userId}
    </select>

    <!-- 사용자 ID로 사용자가 작성한 게시글의 총 댓글 수 조회-->
    <select id="countRepliesByUserId" parameterType="int" resultType="int">
        SELECT
            COUNT(*)
        FROM
            community_reply cr
        LEFT JOIN
            community c ON cr.comm_id = c.comm_id
        WHERE
            c.user_id = #{userId}
    </select>
</mapper>