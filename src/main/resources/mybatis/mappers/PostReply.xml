<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper   PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.roommake.channel.mapper.PostReplyMapper">

    <select id="getTotalReplyCountByPostId" parameterType="int" resultType="int">
        select
            count(*)
        from
            channel_post_reply
        where
            post_reply_delete_yn = 'N'
          and post_id = #{postId};
    </select>

    <select id="getAllRepliesByPostId" parameterType="int" resultType="com.roommake.channel.vo.ChannelPostReply">
        select
            pr.post_reply_id               as id,
            pr.post_id                     as "post.id",
            pr.user_id                     as "user.id",
            u.user_nickname                as "user.nickname",
            pr.post_reply_content          as content,
            pr.post_reply_create_date      as createDate,
            pr.post_reply_update_date      as updateDate,
            pr.post_reply_delete_date      as deleteDate,
            pr.post_reply_status           as status,
            pr.post_reply_delete_yn        as deleteYn,
            pr.post_reply_like_count       as likeCount,
            pr.post_reply_complaint_count  as complaintCount,
            pr.post_reply_group_id         aS groupId,
            pr.parents_post_reply_id       as parentsId
        from
            channel_post_reply pr
            left join Roommake.user u on u.user_id = pr.user_id
        where
            pr.post_id = #{postId}
            and pr.post_reply_status = 'active'
            and pr.post_reply_delete_yn = 'N'
        order by
            pr.post_reply_group_id asc,
            pr.post_id asc
    </select>

    <insert id="createPostReply" parameterType="com.roommake.channel.vo.ChannelPostReply">
        insert into channel_post_reply
            (post_id, user_id, post_reply_content)
        values
            (#{post.id}, #{user.id}, #{content})
        <selectKey keyProperty="id" resultType="int" order="AFTER">
            select last_insert_id()
        </selectKey>
    </insert>

    <update id="modifyReplyGroupId" parameterType="com.roommake.channel.vo.ChannelPostReply">
        update
            channel_post_reply
        set
            post_reply_group_id = #{groupId}
        where
            post_reply_id = #{id}
    </update>

    <insert id="createPostReReply" parameterType="com.roommake.channel.vo.ChannelPostReply">
        insert into channel_post_reply
            (post_id, user_id, post_reply_content, parents_post_reply_id, post_reply_group_id)
        values
            (#{post.id}, #{user.id}, #{content}, #{parentsId}, #{groupId})
    </insert>
    
    <select id="getReplyByReplyId" parameterType="int" resultType="com.roommake.channel.vo.ChannelPostReply">
        select
            post_reply_id                   as id,
            post_id                         as "post.id",
            user_id                         as "user.id",
            post_reply_content              as content,
            post_reply_create_date          as createDate,
            post_reply_update_date          as updateDate,
            post_reply_delete_date          as deleteDate,
            post_reply_status               as status,
            post_reply_delete_yn            as deleteYn,
            post_reply_like_count           as likeCount,
            post_reply_complaint_count      as complaintCount,
            parents_post_reply_id           as groupId,
            post_reply_group_id             as parentsId
        from
            channel_post_reply
        where
            post_reply_id = #{replyId}
    </select>

    <insert id="addReplyComplaint" parameterType="com.roommake.channel.vo.ChannelPostReplyComplaint">
        insert into channel_post_reply_complaint
            (post_reply_id, user_id, complaint_category_id)
        values
            (#{reply.id}, #{user.id}, #{complaintCat.id})
    </insert>

</mapper>